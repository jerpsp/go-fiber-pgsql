# Build stage
FROM golang:1.24.4-bookworm AS builder

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY . .
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags="-w -s" -o main ./cmd/api/main.go

# Final stage
FROM alpine:latest

WORKDIR /app

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates tzdata

# Create a non-root user and group
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Set timezone
ENV TZ=UTC

# Copy the binary from builder
COPY --from=builder /app/main .
COPY --from=builder /app/environments/production.env ./environments/

# Copy any required static files
COPY --from=builder /app/public ./public

# Use the non-root user
USER appuser

# Expose the port the app runs on
EXPOSE 4000

# Command to run the application
CMD ["./main"]